import java.util.*;
import java.io.*;

InorderReads() {

        ArrayList<String> goodReads  = new ArrayList<String>();
        ArrayList<String> badReads  = new ArrayList<String>();

        event begin before (LinkedList l) :
            call(* LinkedList.loadList()) && target(l) {
                System.out.println("List Read Complete");
                }

        event goodread after (LinkedList l, RichFile f)  returning :
            call(* LinkedList.read(RichFile))
            && target(l)
            && args(f) {
                goodReads.add(f.filepath);
                System.out.println(" Read - " + f.filepath);
            }

        event badread after (LinkedList l, RichFile f) throwing :
            call(* LinkedList.read(RichFile))
            && target(l)
            && args(f) {
                badReads.add(f.filepath);
                System.out.println(" Ignored - " + f.filepath);
            }

        event end after(LinkedList l) :
            call(* LinkedList.loadList()) && target(l) {
                System.out.println("List Read Complete");
                }


	ere : begin (goodread | badread)* end

	@fail {
	  System.err.println(
            "Reads didn't happen in expected order"
          );
	}
}
